#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h> // Include this for system("cls")

#define MAX_USERS 200
#define MAX_USERNAME_LENGTH 25
#define MAX_PASSWORD_LENGTH 25
#define MAX_ADMIN 10

struct UserData {
    char username[MAX_USERNAME_LENGTH];
    char password[MAX_PASSWORD_LENGTH];
};

// Function declarations
void admin_sglgn();
bool admin_login();
void admin_reg();
bool isValidEmail(const char *email);
void customer_sglgn();
bool customer_login();
void customer_reg();
int design();
void login_dsgn();
int main();

// admin signup and registration form
void admin_sglgn() 
{
	printf("\n\n\t\t\t\t\t\t Login or Sign Up !!"
			"\n\n\t\t\t\t\t\t 1) Login "
			"\n\t\t\t\t\t\t 2) Create a new Account"
			"\n\t\t\t\t\t\t 3) Back"
			"\n\t\t\t\t\t\t Enter Your choice :"
			);
			
	int ch;
	scanf("%d",&ch);		
	
	if(ch == 1)
	{
		system("cls");
		login_dsgn();
		admin_login();
	}
	else if(ch == 2)
	{
		system("cls");
		login_dsgn();
		admin_reg();
	}
	else if(ch == 3)
	{
		system("cls");
		main();
	}	
	else
	{
		printf("\n\n\t\t\t\t\t\tInvalid choice. Please try again.\n");
	}
}

// Email Varification
bool isValidEmail(const char *email) {
	
	 int at_count = 0,i;
    int dot_count = 0;
    int last_dot_position = -1;

    
    for ( i = 0; email[i] != '\0'; i++)
	{
        if (email[i] == '@')
		{
            at_count++;
        }
		else if (email[i] == '.')
		{
            dot_count++;
            last_dot_position = i;
        }
    }
    
    if (at_count != 1 || dot_count < 1)
	{
        return false;
    }
    
    if (email[0] == '@' || email[1] == '.' || email[last_dot_position + 1] == '\0') 
	{
        return false;
    }

    return true;

}

//Admin Section
bool admin_login() {
    struct UserData user;
    FILE *file;

    file = fopen("admin_data.txt", "r"); // Open the file for reading

    if (file == NULL) {
        perror("Error opening file");
        return false;
    }

    char username[MAX_USERNAME_LENGTH];
    char password[MAX_PASSWORD_LENGTH];
    char email[20];

    printf("\nEnter your Username: ");
    scanf("%s", username);
    printf("\nEnter your Password: ");
    scanf("%s", password);
    printf("\nEnter your Email: ");
    scanf("%s", email);

    while (fread(&user, sizeof(struct UserData), 1, file)) {
        if (strcmp(user.username, username) == 0 && strcmp(user.email, email) == 0) {
            fclose(file);
            return true; // Credentials match
        }
    }

    fclose(file);
    return false; // Credentials do not match
}

//done file writing but in binary
void admin_reg() {
    struct UserData user;
    FILE *file;

    file = fopen("admin_data.txt", "a"); // Open the file for appending

    if (file == NULL) {
        perror("Error opening file");
        return;
    }

    printf("\nEnter a username: ");
    scanf("%s", user.username);
    printf("\nEnter a password: ");
    scanf("%s", user.password);

    fwrite(&user, sizeof(struct UserData), 1, file);

    fclose(file);
}

//coustomer
void customer_sglgn()
{
	printf("\n\n\t\t\t\t\t\t Login or Sign Up !!"
			"\n\n\t\t\t\t\t\t 1) Login "
			"\n\t\t\t\t\t\t 2) Create a new Account"
			"\n\t\t\t\t\t\t 3) Back"
			"\n\t\t\t\t\t\t 4) See Rooms Type"
			"\n\n\t\t\t\t\t\t Enter Your choice :"
			);
			
	int ch;
	scanf("%d",&ch);		
	
	if(ch == 1)
	{
		system("cls");
		login_dsgn();
		customer_login();
	}
	else if(ch == 2)
	{
		system("cls");
		login_dsgn();
		customer_reg();
	}
	else if(ch == 3)
	{
		system("cls");
		main();
	}	
	else
	{
		printf("\n\n\t\t\t\t\t\tInvalid choice. Please try again.\n");
	}		
}

bool customer_login()
{
	struct UserData user;
	char email[20];
    FILE *file;

    file = fopen("customer_data.txt", "r"); // Open the file for reading

    if (file == NULL) {
        perror("Error opening file");
        return false;
    }

    char username[MAX_USERNAME_LENGTH];
    char password[MAX_PASSWORD_LENGTH];

    printf("\nEnter your username: ");
    scanf("%s", username);
    printf("\nEnter your password: ");
    scanf("%s", password);
	printf("\n \t\t\t\t Enter Email:");
	scanf("%s", email);

	if (isValidEmail(email)) 
 	{
       	printf("Valid email address\n");
    }
	else
	{
       	printf("Invalid email address\n");
        return;
    }

    while (fread(&user, sizeof(struct UserData), 1, file)) {
        if (strcmp(user.username, username) == 0 && strcmp(user.password, password) == 0) {
            fclose(file);
            return true; // Credentials match
        }
    }

    fclose(file);
    return false; // Credentials do not match
}

void customer_reg()
{
	struct UserData user;
    FILE *file;

    file = fopen("customer_data.txt", "a"); // Open the file for appending

    if (file == NULL) {
        perror("Error opening file");
        return;
    }

    printf("\nEnter a username: ");
    scanf("%s", user.username);
    printf("\nEnter a password: ");
    scanf("%s", user.password);

    fwrite(&user, sizeof(struct UserData), 1, file);

    fclose(file);
}

int rooms()
{
	printf("\n\n\t\t\t\t\t\t Rooms We Provide !!"
			"\n\n\t\t\t\t\t\t 1) Single Rooms"
			"\n\t\t\t\t\t\t 2) Doubble Bed Rooms"
			"\n\t\t\t\t\t\t 3) King Size Rooms"
			"\n\n\t\t\t\t\t\t Enter Your choice :"
			);
}
int design()
{
	int i,ch;
	for(i=0;i<4;i++)
	{
		printf("\t\t\t\t\t~>~>~>~>~>~>~>~>~>~<~<~<~<~<~<~<~<~<~<~\n");	
	}
	printf("\t\t\t\t\t~~Welcome To The 'Bhadiyadra's' Hotel~~\n");
	for(i=0;i<4;i++)
	{
		printf("\t\t\t\t\t~>~>~>~>~>~>~>~>~>~<~<~<~<~<~<~<~<~<~<~\n");	
	}
	printf("\n\n\n\t\t\t\t\tEnter 1) Admin\n");
	printf("\t\t\t\t\tEnter 2) Customer\n");
	
	printf("\n\n\t\t\t\t\tEnter Your Answer:");
	scanf("%d",&ch);
	
	if(ch == 1)
	{
		system("cls");
		login_dsgn();
		admin_sglgn();
	}
	else if(ch == 2)
	{
		system("cls");
		login_dsgn();
		customer_sglgn();
	}
	else
	{
		printf("Invalid Choice!!!");
	}
}

void login_dsgn() //print login page design
 {
 	printf("\n\t\t\t~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
 	printf("\n\t\t\t\t\t\t\tLogin Portal");
 	printf("\n\t\t\t~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
 }

int main()
{
	design();
	return 0;
}


