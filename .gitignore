#include<stdio.h>
#include <stdbool.h>
#include <stdlib.h> 
#include <string.h>
#define MAX_USERS 200
#define MAX_USERNAME_LENGTH 25
#define MAX_PASSWORD_LENGTH 25
#define MAX_ADMIN 10

// Function declarations

int main();
int design();
void login_design();
//int choiceSelection();
void admin_login_design();
void customer_login_design();
int admin_signUpLogin();
//int AdminChoiceSelection();
bool isValidEmail(const char *email);
bool admin_login();
int admin_choice(); //coding...
int customer_signlogin();
//int CustomerChoiceSelection();
bool customer_login();
void customer_reg();
int rooms();


int main()
{
	design();
	return 0;
}

struct UserData {
    char username[MAX_USERNAME_LENGTH];
    char password[MAX_PASSWORD_LENGTH];
};

//Home Page(1)
int design()
{
	int ch;
	
	for(int i=0;i<4;i++)
	{
		printf("\t\t\t- . - . - . - . - . - . - . - . - . - . - . - . - . - . - . - . - . - . - .\n");	
	}
		printf("\t\t\t- . - . - . - . - Welcome To Hotel Management System- . - . - . - . - . - .\n");
	for(int i=0;i<4;i++)
	{
		printf("\t\t\t- . - . - . - . - . - . - . - . - . - . - . - . - . - . - . - . - . - . - .\n");	
	}
	
	printf("\n\n\n\t\t\t\t\tEnter 1) Admin\n");
	printf("\t\t\t\t\tEnter 2) Customer\n");
	
	printf("\n\n\t\t\t\t\tEnter Your Answer:");
	scanf("%d",&ch);
	
	if(ch == 1)
	{
		system("cls");
		admin_login_design();
		admin_signUpLogin();
	}
	else if(ch == 2)
	{
		system("cls");
		customer_login_design();
		customer_signlogin();
	}
	else
	{
		login_design();
		printf("Invalid Choice!!!");
	}
}

//login page(1.1)
void login_design() //print login page design
{
 	printf("\n\t\t\t<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>");
 	printf("\n\t\t\t\t\t\t\tLogin Portal");
 	printf("\n\t\t\t<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>");
}
	
//int choiceSelection(int ch)
//{
////	int ch;	
//}

// admin and registration form(2.1)
void admin_login_design() //print Admin login page design
{
 	printf("\n\t\t\t<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>");
 	printf("\n\t\t\t\t\t\t\t Admin Login Portal");
 	printf("\n\t\t\t<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>");
}
void customer_login_design() //print Customer login page design
{
 	printf("\n\t\t\t<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>");
 	printf("\n\t\t\t\t\t\t\t Customer Login Portal");
 	printf("\n\t\t\t<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>--<<-->>");
}

int admin_signUpLogin() 
{
	printf("\n\n\t\t\t\t\t\t Login or Sign Up !!"
			"\n\n\t\t\t\t\t\t 1) Login "
			"\n\t\t\t\t\t\t 2) Guest"
			"\n\t\t\t\t\t\t 3) Back"
			"\n\t\t\t\t\t\t 4) Coustomer POV"
			"\n\t\t\t\t\t\t Enter Your choice :"
			);
			
	int ch;
	scanf("%d",&ch);
			
	if(ch == 1)
	{
		system("cls");
		admin_login_design();
		admin_login();
		
	}
	else if(ch == 2)
	{
		system("cls");
		admin_login_design();
		admin_choice();
	}
	else if(ch == 3)
	{
		system("cls");
		design();
	}
	else if(ch == 4)
	{
		system("cls");
		admin_login_design();
		customer_signlogin();
	}	
	else
	{
		printf("\n\n\t\t\t\t\t\tInvalid choice. Please try again.\n");
	}
}

//int AdminChoiceSelection(int ch)
//{		
////int ch;
//}		

// Email Varification
bool isValidEmail(const char *email) {
	
	 int at_count = 0,i;
    int dot_count = 0;
    int last_dot_position = -1;

    
    for ( i = 0; email[i] != '\0'; i++)
	{
        if (email[i] == '@')
		{
            at_count++;
        }
		else if (email[i] == '.')
		{
            dot_count++;
            last_dot_position = i;
        }
    }
    
    if (at_count != 1 || dot_count < 1)
	{
        return false;
    }
    
    if (email[0] == '@' || email[1] == '.' || email[last_dot_position + 1] == '\0') 
	{
        return false;
    }

    return true;

}

//Admin Section(2.1.1)
bool admin_login() {
    struct UserData user;
    FILE *file;

    file = fopen("admin_data.txt", "r");

    if (file == NULL) {
        perror("Error opening file");
        return false;
    }

    char username[MAX_USERNAME_LENGTH];
    char password[MAX_PASSWORD_LENGTH];
    char email[20];

    printf("\nEnter your Username: ");
    scanf("%s", username);
    printf("\nEnter your Password: ");
    scanf("%s", password);

    while (fread(&user, sizeof(struct UserData), 1, file)) {
        if (strcmp(user.username, username) == 0 && strcmp(user.password, password) == 0) {
            printf("Login successful!\n");
            admin_choice(); // Call admin_choice upon successful login.
            return true;
        }
        
    }

    system("cls");
	admin_login_design();
    //printf("\nLogin failed. Please try again.\n");
    admin_login(); // Call admin_signlogin upon failed login.
    fclose(file);
    return false;
}

// admin_choice function
int admin_choice() {
    printf("\n\t\t\t\t\t\tAdmin options:\n"
			"\n\t\t\t\t\t\t 1) Rooms"
			"\n\t\t\t\t\t\t 2) Customer Details"
			"\n\t\t\t\t\t\t 3) Billing"
			"\n\t\t\t\t\t\t 4) Cancel Booking"
			"\n\t\t\t\t\t\t Enter Your choice :"
			);
	int ch;
	scanf("%d",&ch);
	
	return ch;
	//coding...
}

//coustomer(2.2)
int customer_signlogin()
{
	printf("\n\n\t\t\t\t\t\t Login or Sign Up !!"
			"\n\n\t\t\t\t\t\t 1) Login "
			"\n\t\t\t\t\t\t 2) Create a new Account"
			"\n\t\t\t\t\t\t 3) See Rooms Type"
			"\n\t\t\t\t\t\t 4) Back"
			"\n\t\t\t\t\t\t 5) Admin"
			"\n\n\t\t\t\t\t\t Enter Your choice :"
			);
			
	int ch;
	scanf("%d",&ch);
	
	if(ch == 1)
	{
		system("cls");
		customer_login_design();
		customer_login();
	}
	else if(ch == 2)
	{
		system("cls");
		customer_login_design();
		customer_reg();
	}
	else if(ch == 3)
	{
		system("cls");
		customer_login_design();
		rooms();
	}	
	else if(ch == 4)
	{
		system("cls");
		design();
	}
	else if(ch == 5)
	{
		system("cls");
		admin_login_design();
		admin_login();
	}		
	else
	{
		printf("\n\n\t\t\t\t\t\tInvalid choice. Please try again.\n");
	}
}

//int CustomerChoiceSelection(int ch)
//{
////int ch;		
//}

//(2.2.1)
bool customer_login()
{
	struct UserData user;
	char email[20];
    FILE *file;

    file = fopen("customer_data.txt", "r"); // Open the file for reading

    if (file == NULL) {
        perror("Error opening file");
        return false;
    }

    char username[MAX_USERNAME_LENGTH];
    char password[MAX_PASSWORD_LENGTH];

    printf("\nEnter your username: ");
    scanf("%s", username);
    printf("\nEnter your password: ");
    scanf("%s", password);
	printf("\n \t\t\t\t Enter Email:");
	scanf("%s", email);

	if (isValidEmail(email)) 
 	{
       	printf("Valid email address\n");
       	rooms();
    }
	else
	{
       	printf("Invalid email address\n");
       	printf("Enter Email Again\n");
       	scanf("%s", email);
//        return;
    }

    while (fread(&user, sizeof(struct UserData), 1, file)) {
        if (strcmp(user.username, username) == 0 && strcmp(user.password, password) == 0) {
            fclose(file);
            return true; // Credentials match
        }
    }

    fclose(file);
    return false; // Credentials do not match
}

//(2.2.2)
void customer_reg()
{
	struct UserData user;
    FILE *file;

    file = fopen("customer_data.txt", "a"); // Open the file for appending

    if (file == NULL) {
        perror("Error opening file");
        return;
    }

    printf("\nEnter a username: ");
    scanf("%s", user.username);
    printf("\nEnter a password: ");
    scanf("%s", user.password);
//    printf("\nEnter a Email: ");
//    scanf("%s", user.email);

    fprintf(file, "%s %s\n", user.username, user.password);
	fclose(file);
}

//(2.2.3)
int rooms()
{
	printf("\n\n\t\t\t\t\t\t Rooms We Provide !!"
			"\n\n\t\t\t\t\t\t 1) Standard Rooms"
			"\n\t\t\t\t\t\t 2) Deluxe Rooms"
			"\n\t\t\t\t\t\t 3) Premium Rooms"
			"\n\t\t\t\t\t\t 4) Back"
			"\n\n\t\t\t\t\t\t Enter Your choice :"
			);
	int ch;
	scanf("%d",&ch);
}
